name: build-test-deploy

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  build-test:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install Gateway deps
        run: |
          python -m pip install --no-cache-dir -r services/gateway/requirements.txt
          python -m pip install --no-cache-dir -e services/gateway

      - name: Install LLM-Proxy deps
        run: |
          python -m pip install --no-cache-dir -e services/llm_proxy

      - name: Install Dialogue-Worker
        run: python -m pip install --no-cache-dir -e services/dialogue_worker


      - name: Create .env for Compose
        run: |
          cat <<EOF > .env
          POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB=${{ secrets.POSTGRES_DB }}
          NEO4J_PASSWORD=${{ secrets.NEO4J_PASSWORD }}
          MINIO_ROOT_USER=${{ secrets.MINIO_ROOT_USER }}
          MINIO_ROOT_PASSWORD=${{ secrets.MINIO_ROOT_PASSWORD }}
          LETSENCRYPT_EMAIL=${{ secrets.LETSENCRYPT_EMAIL }}
          EOF



      - name: Run pytest (all services)
        run: pytest -q

      - name: Compose up full stack (infra + worker)
        run: |
          docker compose \
            --env-file .env \
            -p sara-core \
            -f compose/core.yml \
            -f compose/monitoring.yml \
            up -d --build


      - name: Compose down after test
        if: always()
        run: docker compose -f compose/core.yml down -v

      - name: Show container status & failing logs
        if: always()                   # runs even if previous step failed
        run: |
          docker compose -f compose/core.yml ps -a
          echo "------- last 50 lines of unhealthy containers -------"
          for svc in $(docker compose -f compose/core.yml ps --services --filter "status=exited"); do
            echo "----- $svc -----"
            docker compose -f compose/core.yml logs --tail=50 $svc
          done


  


