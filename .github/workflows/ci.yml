name: build-test

on: [push, pull_request]

jobs:
  compose-test:
    runs-on: [self-hosted]

    services: {}          # we bring our own in the steps

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install Gateway deps
        run: |
          python -m pip install --no-cache-dir -r services/gateway/requirements.txt
          python -m pip install --no-cache-dir -e services/gateway

      - name: Install LLM-Proxy deps
        run: |
          python -m pip install --no-cache-dir -e services/llm_proxy

      - name: Create .env for Compose
        run: |
          cat <<EOF > .env
          POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB=${{ secrets.POSTGRES_DB }}

          NEO4J_PASSWORD=${{ secrets.NEO4J_PASSWORD }}

          MINIO_ROOT_USER=${{ secrets.MINIO_ROOT_USER }}
          MINIO_ROOT_PASSWORD=${{ secrets.MINIO_ROOT_PASSWORD }}

          LETSENCRYPT_EMAIL=${{ secrets.LETSENCRYPT_EMAIL }}
          EOF

      - name: Run pytest (all services)
        run: pytest -q

      - name: Compose up (core infra â€” no wait)
        run: docker compose -f compose/core.yml up -d

      - name: Compose down
        if: always()
        run: docker compose -f compose/core.yml down -v
