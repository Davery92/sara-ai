"""create_messages_table

Revision ID: 1dcf9ed2c000
Revises: 303bc56f1fc9 # <<< --- CORRECTED: Points to the initial migration (e.g., create_users_table)
Create Date: <Alembic will fill this or it's already filled>

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql # For UUID type
from pgvector.sqlalchemy import Vector # For Vector type

# revision identifiers, used by Alembic.
revision: str = '1dcf9ed2c000'
down_revision: Union[str, None] = '303bc56f1fc9' # <<< --- CORRECTED
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Commands auto generated by Alembic - please adjust!"""
    op.create_table('messages',
        sa.Column('id', postgresql.UUID(as_uuid=True), primary_key=True, server_default=sa.text("gen_random_uuid()")),
        sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('content', sa.Text(), nullable=True),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.Column('embedding', Vector(768), nullable=True), # Initial dimension
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_messages_user_id_users')),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_messages'))
    )
    op.create_index(op.f('ix_messages_user_id'), 'messages', ['user_id'], unique=False)
    op.create_index(op.f('ix_messages_created_at'), 'messages', ['created_at'], unique=False)


def downgrade() -> None:
    """Commands auto generated by Alembic - please adjust!"""
    op.drop_index(op.f('ix_messages_created_at'), table_name='messages')
    op.drop_index(op.f('ix_messages_user_id'), table_name='messages')
    op.drop_table('messages')

